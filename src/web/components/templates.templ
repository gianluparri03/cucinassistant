package components

import (
	"cucinassistant/langs"
)

templ TemplateBase(lang string, body templ.Component, message templ.Component) {
    <!DOCTYPE html>

    <html>
        <head>
            <meta charset="utf-8">

            <title>CucinAssistant</title>

            <meta http-equiv="content-type" content="text/html">
            <meta name="lang" content={ lang }>
            <meta name="author" content="Gianluca Parri">
            <meta name="owner" content="Gianluca Parri">
            <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

            <link rel="manifest" href="/assets/manifest.json">

            <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inclusive+Sans&family=Satisfy&display=swap" crossorigin="anonymous">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.css" crossorigin="anonymous">
            <link rel="stylesheet" href="/assets/sakura.css">
            <link rel="stylesheet" href="/assets/style.css">

            <script src="https://unpkg.com/htmx.org@2.0.0" crossorigin="anonymous"></script>
            <script src="https://unpkg.com/htmx.org@1.9.12/dist/ext/response-targets.js" crossorigin="anonymous"></script>
            <script src="https://kit.fontawesome.com/ca194095ec.js" crossorigin="anonymous"></script>
            <script src="https://code.jquery.com/jquery-3.7.1.slim.min.js" crossorigin="anonymous"></script>
            <script src="/assets/scripts.js" crossorigin="anonymous"></script>

            <script> navigator.serviceWorker.getRegistrations().then(rs => { for (const r of rs) { r.unregister(); } }); </script>
        </head>

        <body
            hx-ext="response-targets"
            hx-boost="true"
            hx-push-url="true"
            hx-indicator="#loader-container"
            hx-target="#body-container"
        >
            <nav>
                <span><i id="home" class="fas fa-home" hx-get="/"></i></span>
                <span id="logo">CucinAssistant</span>
                <span><i id="lang" class="fas fa-language" hx-get="/lang"></i></span>
            </nav>

            <main>
                <div id="body-container">@body</div>
                <div id="message-container">@message</div>
                <div id="loader-container"><span id="loader"></span></div>
            </main>

            <footer>
                CucinAssistant &copy; 2023-2025, Gianluca Parri <br>
                <a hx-get="/info">{ langs.Translate(ctx, langs.STR_INFO) }</a> &bullet;
                <a href={ templ.SafeURL("https://cucinassistant.com/tutorials/" + lang + ".pdf") } hx-disable>
                    { langs.Translate(ctx, langs.STR_TUTORIAL) }
                </a>
            </footer>
        </body>
    </html>
}

templ TemplateTitle(title string, backLink string) {
    <h1>
        if backLink != "" {
            <i id="back" class="fas fa-arrow-circle-left" hx-get={ backLink }></i>
        }

        { title }
    </h1>
}

templ TemplateMessage(msg langs.String, backLink string, isHx bool) {
    <message>
        <content>
			<p>{ langs.Translate(ctx, msg) }</p>

            <div>
                <button class="icon-text"
                    hx-on:click="$(this).parents('message').remove();"
                    if backLink != "" {
                        hx-get={ backLink }
                    } else {
						if !isHx {
							hx-get="/"
						}
					}
                    hx-push-url="true"
                    autofocus>

                    <i class="fas fa-check"></i> { langs.Translate(ctx, langs.STR_OK) }
                </button>
            </div>
        </content>
    </message>
}

templ TemplateEmpty() {
}
